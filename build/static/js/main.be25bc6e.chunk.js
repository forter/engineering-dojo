(this.webpackJsonpdojo=this.webpackJsonpdojo||[]).push([[0],{13:function(e){e.exports=JSON.parse('{"Meta":{"Dans":{"Dan 1":{"name":"Entry Level Engineer","impact":"self"},"Dan 2":{"name":"Software Engineer","impact":"team"},"Dan 3":{"name":"Senior Software Engineer","impact":"team"},"Dan 4":{"name":"Staff Software Engineer","impact":"teams"},"Dan 5":{"name":"Principle Software Engineer","impact":"group/groups/company"}},"Sections":{"Responsibilities":"Things you\'re expect to do/know at this level","Examples":"Concrete things you\'re expected to be able to accomplish at this level","Anti-Patterns":"Patterns of thought/action you\'re expected to avoid at this level","Resources":"Books/essays/blog posts that should help you improve at this level"}},"Ladder":{"engineering-craftsmanship":{"Topics":["Architecture","Code writing skills","Tests","Operations","Security","Observability","Costs optimizations","Ownership","Being a Chief"],"Ladder":[{"Dan 1":{"Responsibilities":["Focus on growth and learning the team\'s tech stack","Contribute meaningfully to well scoped problems (with help from others)","Write clean code and tests; iterate based on feedback","Participate in code reviews and technical design sessions","Learn the basics of debugging and the tools used for it","Know when to pause and ask for help"],"Examples":["Deploy a high-quality scoped feature to production (including tests, CR, etc.)","Investigate and fixe an interesting bug in one of the team\'s systems"],"Anti-Patterns":[{"anti-pattern":"Being not self-motivated; needing someone to tell you what to do next","remedy":"Cultivate autonomy"},{"anti-pattern":"Constantly veering into the weeds","remedy":"Focus on the important things; follow the 80-20 rule"},{"anti-pattern":"Disregarding the team processes","remedy":"Learn the team\'s processes well before criticizing; they\'re ofter there for a reason"},{"anti-pattern":"Working on too many things at once, not getting the important stuff done","remedy":"Focus on one thing at a time, and do it well, then move on"}],"Resources":["Code Complete (Book)","Clean Code (Book)","Refactoring (Book)","Effective Java \u2014 Bloch, Joshua (Book)"]}},{"Dan 2":{"Responsibilities":["Consistently follow best coding practices","Defend your technical decisions in Code reviews","Write maintainable code (i.e. code that\'s easy to read, refactor, add features to, etc)","Provide helpful, timely code reviews","Contribute to technical design in projects, including thinking through edge cases","Participate in the team\'s on-call rotation, as applicable to the domain","Understand how code fits into a broader technical context","Break down large tasks into sub-tasks; give higher-level status updates on your progress","Have a high-level understanding of the company\'s major systems (\\"system overview\\")","Participate and contribute to design reviews in near-by scope"],"Examples":["Join on-call rotation for at least 2 services within the team\'s responsibility","Guide a new team member on working effectively in relevant areas","Have a good grasp on how the team\'s systems are being tested and deployed via CI/CD pipelines"],"Anti-Patterns":[{"anti-pattern":"Failing to identify or communicate big roadblocks","remedy":"Raise red flags early;  get unstuck quickly"},{"anti-pattern":"Not taking operational excellence seriously","remedy":"Consider that you\'re setting an example for more junior devs; be proud of your work"},{"anti-pattern":"Providing solutions that are more complicated than necessary","remedy":"There\'s beauty in simplicity and elegance; tried and tested is often better than the new shiny toy"},{"anti-pattern":"Preferring shallow progress over an in-depth understanding of code and context","remedy":"You should be expanding your context and understanding; it might not seem so at the moment, but they\'ll server you much better later down the line that a quick win now"},{"anti-pattern":"Preferring patching symptoms rather than mitigating the core issue","remedy":"Spend 2x time now to actually fix the problem, to save 10x time later when the bug reappears"}],"Resources":null}},{"Dan 3":{"Responsibilities":["Be an expert in the company\'s processes, while also helping to define and improve them","Write meaningful, helpful code reviews","Make well-reasoned design decisions, identifying potential issues, trade-offs, risks, and appropriate levels of abstraction","Be proficient in all relevant technical skills, and able to move quickly, due to a deep understanding of large portions of the codebase (cross teams)","Maintain awareness of industry trends and tools","Debug expertly within your primary focus area","Write tech specs and identify risks before starting major projects","Set technical standards for the team","Go out of your way to reduce complexity within the team\'s systems","Become a Chief of at least one of the team\'s primary systems","As a Chief of a system, define and drive the roadmap / vision for that system","Produce high-quality postmortems (aka BetterNexts) from production incidents (or interesting wins)","Take Security and Cost (cloud resources & time investment) into considerations when designing a technical solution"],"Examples":["During a code-review, be able to supplement comments with links to relevant resources or other examples, thus instructing the code committer","Offer a quarterly roadmap of the system of which you are a Chief","Be able to reason about \\"buy vs. build\\" when promoting technical initiatives (i.e. should we build a solution ourselves or buy an existing one)"],"Anti-Patterns":[{"anti-pattern":"Not delegating. Always saying \u201cyes\u201d and suffer from burn-out or continuous loss of focus","remedy":"Be mindful of your time and previous engagements; don\'t spread yourself too thin"},{"anti-pattern":"Letting details slip through the cracks","remedy":"At your level of engineering competence, you\'re expected to be meticulous in your craft"},{"anti-pattern":"Over-emphasizing scaling or high availability far beyond the requirements (project/business needs)","remedy":"While being mindful of scale and HA is important, sometimes a naive solution is good enough, and is able to get you up and running quickly"},{"anti-pattern":"Preferring local solutions to more global problems, especially if a problem is an obvious issue to multiple teams","remedy":"Always think about the impact you\'re making; focusing only on your immediate surroundings limits the extent of your potential impact"}],"Resources":null}},{"Dan 4":{"Responsibilities":["Focus on technical decision making, leading work that affects one or more complex systems and mission-critical areas","Consistently deliver code that sets the standard for quality and maintainability","Have a broad understanding of the company\'s architecture and how your team\'s domain fits within it","Systematically think through potential design impacts on other teams and the company","Be a go-to expert in an area, with an increasingly strategic mindset","Explore 3rd party vendors and new technologies with a sizable potential impact on the company","Proactively offer ways to optimize the team\'s systems for costs saving, scale and operational stability","Constantly keep in mind the company\'s security orientation (preferences, requirements, current tools, certifications) when designing and building systems","Control security permissions (saying no when needed) within the team, to reduce the attack surface"],"Examples":["Integrate a new monitoring solution, including the understanding of the business needs, gathering of requirements/pains, getting buy-in, performing a DR, educating the users, and leading the execution end to end. Post-production measure impact and satisfaction.","Lead a cross-team effort of documentation standardization","Lead a conversation and implementation around shared libraries across team","Lead a conversation and implementation around how we develop in a specific language (tooling, dev experience, best practices, etc.)","Migrate a huge project to use a newer technology stack that will help increase engineering velocity"],"Anti-Patterns":[{"anti-pattern":"Forcing your opinion (potentially abusing your \\"title\\") without giving enough attention to tradeoffs and hearing others","remedy":"Be mindful of the fact that you can also be wrong, and never browbeat others; lead by conviction, not fear"},{"anti-pattern":"Focusing only on 1-2 teams or areas, instead of looking at the bigger picture (long-term horizon)","remedy":"You\'re expected to be impacting multiple teams and areas; see where you can use your skill-set for maximum impact"},{"anti-pattern":"Giving up too quickly when trying to convince people (e.g. multiple teams, many opinions) due to high friction","remedy":"People will inevitably disagree with you. That\'s ok. Consider their objections, but if you believe you\'re in the right, work harder on convincing them"},{"anti-pattern":"Falling in love with the solution instead of the problem. Be unable adopt others\' opinions and execute on them.","remedy":"There\'s usually nothing magical about your preferred solution; consider that there may be many equally good solutions to a problem. If others prefer and equally viable solution, it might be better to adopt it than digging in and defending yours"},{"anti-pattern":"Building solutions that are too \u201cshort-term\u201d oriented or not robust enough","remedy":"Spend more time when gather requirements to enrich them, and make the final solution more robust"}],"Resources":null}},{"Dan 5":{"Responsibilities":["Persistently debug the toughest issues throughout the entire stack, regardless of the environment; find the root cause or a viable workaround when others are unable to do so","Be incredibly knowledgeable both inside and outside of the company in your area(s) of expertise","Be the primary expert in multiple areas of our stack; deeply knowledgeable in several domains","Own (as a Chief) cross-team shared infrastructure","Lead large (multi-year engineering effort) and complicated cross-teams/groups architecture changes","Help the Security team by participating in the company\'s Risk Analysis. Provide useful insights on topics such as PII, change management, vulnerabilities, SSH/VPN access, Disaster Recovery, etc."],"Examples":["Leads a multi-year engineering effort","Leads a successful adoption of a system (high impact on day to day development and ops) that will drastically change the way everyone in the group (or groups) works"],"Anti-Patterns":[{"anti-pattern":"Acting only from a technical viewpoint, without considering the business needs or needed impact (e.g. coming up with suggestions that might not be relevant for the company in the next 12-18 months)","remedy":"At your level, architectural decisions have vast implications; you should always be thinking on long term impact that\'s aligned with the company\'s business needs"},{"anti-pattern":"Not investing time to come up with concrete vision and ideas for improving the way we work","remedy":"You\'re expected to be able to present a coherent articulation of your ideas, not just vague statements about \\"making things better\\""},{"anti-pattern":"Focusing only on R&D, without trying to understand the impact on other groups (where applicable)","remedy":"Try to expand your horizons across department lines; your decisions likely affect other departments as well \u2014\xa0be mindful of it"}],"Resources":null}}]},"project-leadership":{"Topics":["Design reviews","Project management","Getting things done","Communication","Alignment","Delivery"],"Ladder":[{"Dan 1":{"Responsibilities":["Deliver well-defined small tasks, holding yourself accountable","Make steady progress on tasks; know when to ask for help in order to get unblocked","Learn relevant tools and resources, while developing your productivity skills","Build effort-estimation skills","Seek input from colleagues with area expertise"],"Examples":["Able to scope a feature in Asana/Jira, including tests, monitoring, alerts, code-review and everything else needed to deliver a high quality feature"],"Anti-Patterns":[{"anti-pattern":"Moving to writing code too quickly, without first fully scoping the effort/project","remedy":"Make sure you know what you\'re going to do before starting coding; this will help you avoid having to backtrack later"},{"anti-pattern":"Avoiding raising a flag when stuck on the same problem for too long","remedy":"Don\'t be afraid to ask for help; while some determination is commendable, don\'t waste too much time on a problem that someone else has already solves"},{"anti-pattern":"Failing to report on progress in a timely manner (\\"going dark\\")","remedy":"Almost always prefer \\"push\\" to \\"pull\\" communications; letting others know where you stand on a task is a sure sign of ability and confidence"}],"Resources":null}},{"Dan 2":{"Responsibilities":["Work autonomously to estimate and deliver medium to large tasks","Master the ability to break down tasks, plan, estimate, and cut scope in order to ship on time","Detect problems in requirements and notify the relevant stakeholders","Attempt to identify major pitfalls in the project ahead of time","Understand how people use the product/service you\'re building, and be able to adjust accordingly","Proactively inform on issues, risks and delays in tasks","Deliver design reviews for small projects","Include in your project planning/estimation work such as documentation, tests, monitoring, alerts, costs, security considerations, and anything else that is required for maintenance"],"Examples":["Conduct a high quality Design Review (DR) for a 2-3w project","Lead the execution of a medium-size project (2-4w) with 1-2 more people in the team","Continue to support (as an owner) a project beyond shipping to production (a few weeks after the project is deployed and running)"],"Anti-Patterns":[{"anti-pattern":"Placing blame on project delays elsewhere","remedy":"As the owner of a project, the buck stops with you; be confident that others will recognize when a delay is not your fault, but still take responsibility for it"},{"anti-pattern":"Getting stuck on unimportant details; not utilize the 80-20 rule","remedy":"Some parts of the project bring most of its value; focus on those first and foremost, before moving on to polishing touches"},{"anti-pattern":"Not communicating progress related to the project","remedy":"Regardless of whether the lack of progress is due to you or others, a steady stream of communications is imperative to let your superiors know where the project stands"}],"Resources":null}},{"Dan 3":{"Responsibilities":["Be able to take ownership to lead and deliver large projects (>4w of work) that spans multiple systems, with support from peers","When acting as the Project Lead on a project, communicate progress to stakeholders and ensure alignment","Be persistent in the face of roadblocks; dispatch them efficiently, pulling in others as necessary","Scope and stage work into well-defined milestones to avoid a monolithic deliverable","Be accountable end-to-end, through planning, development, deploy, monitoring and maintenance","Set realistic deadlines, estimating methodically based on iterative learning","Be able to question and push back on tasks/requirements","Be able to reduce complexity and prioritize in alignment with company goals","Handle well open-ended problems and ambiguity","Suggest steps to mitigate impact of delays in projects","Require minimal direction / oversight","Ensure projects don\'t lose momentum","Deliver design reviews for complex projects","Seek empirical validation through PoCs, tests and research"],"Examples":["Being able to separate requirements/pains from the solution, and, if needed, agree on the former before the latter. Avoid coming up with a solution that many people will think solves the wrong requirement (or are confused due to not knowing what the requirements are)","Lead a Design Review of a fairly large project (more than 6 weeks of engineering time)","Mitigate risks of a complex DR which requires a new technology or uses a new capability, by doing proper research as part of the DR process (e.g. running a small-scale PoC to validate a risk/concern that might affect the DR)","Get buy-in from other lead developers before presenting a DR to a wider audience"],"Anti-Patterns":[{"anti-pattern":"Rushing to work on the solution before gathering and understanding business/analytical/technical needs","remedy":"Time spent planning is payed back tenfold during execution"},{"anti-pattern":"Not stating clearly risks in a project and the way they will be mitigated","remedy":"Risk mitigation is arguably the most important part of a Design Review; be sure to address risks early and with detail"},{"anti-pattern":"Being unable to lead other teammates in the project. Having problems with e.g. delegation, tasks assignment, solving roadblocks, communications around progress, etc.","remedy":"Understand that there\'s only so much you can do on your own. The mark of a good leader is being able to work with others"},{"anti-pattern":"Not pushing back (and providing alternatives and justifications) on requirements that might add risk, add a lot of time to the project or make it extremely hard to maintain it in the long run","remedy":"Taking ownership of a project means accepting responsibility for it; not pushing back on risky requirements is a sure way to end up with a project you hate supporting"}],"Resources":null}},{"Dan 4":{"Responsibilities":["Plan and execute large projects with complex requirements and interdependencies across teams and systems","Consistently deliver on-time and at a high level of quality","Define key metrics and measure the project\'s impact","Consistently reduce the complexity of projects in order to get more benefit with less work","Contribute to all major architectural decisions and read all tech specs within your domain. Track status and consider implications for other systems","Enable more junior engineers to take a leading role in designing solutions, by helping them understand requirements and organizational context","Effectively prioritize your own workload and focus across many streams of work","Market and advertise projects; create excitement for users and drive adoption","Help define roadmaps and set visions for long-term projects","Work closely with relevant Product Managers to gain context and understand business needs. Be able to then represent the business/product in future meetings with your teammates"],"Examples":["Explain a project\'s business impact (\\"why do we do this?\\") and tradeoffs to a wide audience. Build decision making context for others","Know how to utilize meetings effectively (e.g. status meetings, daily, weekly sync) to drive project momentum and keep everyone aligned","Act as a single-point-of-contact in the organization for a project. Don\'t require multiple managers to be involved in understanding the project\'s progress/status"],"Anti-Patterns":[{"anti-pattern":"Struggling to raise flags and find alternative solutions when a teammate or a dependency is not keeping up, either in terms of quality or availability","remedy":"Learn to think on your feet. Circumstances change, and you should be able to adapt, whether by redirecting manpower, changing requirements, delaying the project, or any other means"},{"anti-pattern":"Avoiding confrontations \u2014 struggling to resolve disagreements, explicitly stating your needs, etc.","remedy":"Confrontations are inevitable, so it\'ll be nigh impossible to completely avoid them. Be sure you know *exactly* what the disagreement is about; it might be much smaller than it seems"},{"anti-pattern":"Trying to achieve too many things on your own, instead of relying on others around your \u2014 either by asking help or delegating tasks","remedy":"Hopefully, you\'re surrounded by other competent people \u2014\xa0take advantage of that fact, and work with them :)"},{"anti-pattern":"Inadvertently suppressing innovation from other engineers (e.g. by giving your own ideas first and loudest, criticizing without truly listening to new ideas or by giving the impression that there is only one right solution to a problem)","remedy":"Be open to others, especially the more junior engineers; remember that you yourself was once a smart junior :)"}],"Resources":null}},{"Dan 5":{"Responsibilities":["Be able to succinctly explain to management a project\'s goals, KPIs and milestones, at the right level of abstraction","Successfully plan and deliver complex, multi team/system, long-term projects, including ones with external dependencies","Be the go-to person on company-wide critical projects or initiatives","Create a compelling technical vision with a company-level impact, anticipating future needs","Be a role-model for balancing product and engineering concerns/risks and mitigations","Initiate new projects \u2014 create buy-in, drive delivery and adoption","Demonstrate great skills in project/time/energy management on multi-months projects, while keeping high momentum","Organize and lead large groups of people from multiple teams/groups when working on a project"],"Examples":["Deal well with high friction as a result of cross-cutting concerns, by motivating and energizing yourself and others","Distill large amounts of concerns/feedback into well defined actionable items, while solving the actual business needs of the project","Respectfully and clearly explain why certain concerns or suggestions will not be done as a part of the project (due tradeoffs of time/value/risk)"],"Anti-Patterns":[{"anti-pattern":"Letting friction (disagreements, unclear requirements) stall the project and kill momentum for the team that works on it. Not leading others well, leaving them feeling lost and unsure of what needs to be done","remedy":"There are times when hard decisions need to be made, even if they\'re not perfect. So long as you\'re clear on risks, mitigations and tradeoffs, it\'s to push an imperfect solution"},{"anti-pattern":"Avoiding presenting dilemmas, tradeoffs and taking an active part in making a decision in a timely manner. Waiting for others to make the decision","remedy":"As a principal engineer, you\'ll often be the most senior person working on a project. No one else will decide on the way forward for you on those occasions"}],"Resources":null}}]},"business-involvement":{"Topics":["Product","Market understanding","Precision","New initiatives","Scale","Costs","Security"],"Ladder":[{"Dan 1":{"Responsibilities":["Seek to understand what the company\'s product actually solves and how your customers interact with it","Understand the high-level roles of the different departments in the R&D","Understand and be able explain to others the business impact of your current task (e.g. during daily/weekly)"],"Examples":["Complete your onboarding, including around non-engineering departments, and be able to explain the concepts to others (e.g. your manager)","Ask questions about how different departments in the company contribute to the product"],"Anti-Patterns":[{"anti-pattern":"Having a \\"code-monkey\\" mindset \u2014 knowing how to deliver features but not being able to explain or not caring why they\'re worth doing","remedy":"You\'ll find your work much more satisfying and meaningful if you\'re able to articulate the business needs of the features you\'re working on"},{"anti-pattern":"Looking \\"down\\" on other departments (outside of Engineering) \u2014 not understanding their work, thus discounting their needs/pains/contributions","remedy":"Having strong engineers does not mean having a successful company; trust that the same people that collected great engineers also put thought into hiring amazing people in other departments"}],"Resources":null}},{"Dan 2":{"Responsibilities":["Understand the role of the team in the larger business context","Initiate ideas affecting the team, explaining their urgency or priority with business justifications","Begin understanding the pains of other teams around you (immediate internal customers)","Have a basic understanding of where the company fits in its domain in the world \u2014 what\'s its complete offering, its differentiators vs. competitors, etc.","Deepen your understanding of the high level roles of the teams in your department"],"Examples":["Can clearly explain to others (e.g. new employees) roles of teams in other departments","Know, at least on a high level, how your team\'s systems impact the business (e.g. enabling others, directly affecting offering)"],"Anti-Patterns":[{"anti-pattern":"Promoting ideas with purely technical merit, discounting business justifications","remedy":"Your superiors aren\'t likely to greenlight such projects, which will leave you frustrated. Start from business needs, not tech; you can always choose cool tech once you know what the needs are (if applicable)"},{"anti-pattern":"Not considering or verifying costs when suggesting new ideas","remedy":"Cost is one of the first factors experienced devs and managers consider, so before advancing a new idea, make sure you have a rough idea of how much it\'ll cost"}],"Resources":null}},{"Dan 3":{"Responsibilities":["Understand well the pains of other teams around you (first circle / immediate internal customers)","Proactively seek to talk with internal customers to understand their pains and how the team can serve them better","Be able to clearly document and share your insights and suggestions from talking with other teams, so the team can learn from it and initiate ideas around it - some will be solved within the team, some will be given as feedback to other teams","Take an interest in your company\'s business performance \u2014 understand the ARR, how margins affect the business, knows the big logos the company sold to, etc.","Understand the roles of all the departments in the company, with focus on the sales pipeline","Take costs, security and other business impacting aspects into consideration (e.g. when suggesting new initiatives, as part of DRs, etc.)"],"Examples":["Have a good understanding of your team\'s part of the sales cycle","Be able to explain (at a high level) the full cycle of selling your company\'s product to a customer \u2014 marketing (generating a lead), pre-sale, sale, onboarding (CS/Ops) and serving the customer for the long run","Share a document with the team, and other relevant teams, around information you got from your internal customers. Including a well-crafted summary of the biggest pains (with priorities), relevant suggestions (with high level cost/estimation and gain from that), and basic priorities as you see fit (with business justification)"],"Anti-Patterns":[{"anti-pattern":"Not spending enough time to document proper pains & suggestions, keeping it all in your head and relying only on your memory","remedy":"Others won\'t be able to act to whatever you keep in your head; documenting and sharing your insights is a crucial part of having them"},{"anti-pattern":"Spending too much of your time focusing on the team and the team\'s needs, instead of trying to increase your impact circle with other teams around you","remedy":"One of the greatest benefits that come from increasing your understanding of the business, is the ability to increase the radius of your impact"}],"Resources":null}},{"Dan 4":{"Responsibilities":["Understand the yearly goals and main projects of many of the group\'s teams, including their business impact","Be aware of yearly organizational growth (e.g. new headcount) within the group, aimed at supporting business needs","Be able to clearly articulate and explain to others (e.g. new or less experienced ICs) the motivation and business needs of your main systems","Be able to lead one of the main pillars in the group and become a point-of-contact for it when talking with others (e.g. product offering, scale, costs, security, precision, etc.)","Be continually involved in the team\'s backlog grooming \u2014 help the direct manager to balance tech debt, areas worth to invest in, areas where we should de-risk/mitigate potential threats, etc."],"Examples":["Lead the group\'s FinOps effort \u2014 tracking expenses, creating visibility, suggesting new ideas to cut costs, getting the buy-in, executing, reporting progress to the entire group, etc.","Relevant VPs/directors in the org feel the need to invite you to relevant meetings, instead of inviting your direct manager. The IC (you) becomes the point-of-contact, and managers aren\'t needed in every conversation","Take an active part in quarterly planning \u2014 suggest areas that are worth investing in, helping with high level estimations, consulting on priorities (with good reasoning behind them)"],"Anti-Patterns":[{"anti-pattern":"Letting things live in a \\"limbo\\" for complicated domains (where ownership is a bit fluid). Being passive or unclear about time estimations, or making excuses on why we\'ve reached this state","remedy":"As they say, \\"with great power comes great responsibility\\". Consider stepping up and taking ownership of domains that other aren\'t willing to"},{"anti-pattern":"Not creating momentum in areas you lead - waiting for someone else to pick it up for you (e.g. your manager)","remedy":"Being senior enough to lead an area implies trust from your manager. They need to know that you can be relied upon. Prove them right."},{"anti-pattern":"Acting as an owner (design & decision making) but avoiding the responsibility that comes with it (i.e. continuously supporting and pushing it forward)","remedy":"Many engineers enjoy hacking, but don\'t enjoy maintenance as much. Often, though, a less flashy but well maintained product is much more valuable than an exciting new one that\'s hacked together but then left half finished"}],"Resources":null}},{"Dan 5":{"Responsibilities":["Understand the yearly business goals, using those to define the main projects the group should invest in during the year","As a leader of a main effort in the company, can represent it to management and outside of the company (customers, press/media, conferences, etc.)","Be continuously involved in the group\'s backlog grooming \u2014 help various managers to balance tech debt, areas worth investing in, areas where we should de-risk/mitigate potential threats, etc.","Provide feedback to extended managements (VP level and above) on things that might impose risk, ideas for better offering/security/scale, etc. Has a seat at the table when it comes to such conversations"],"Examples":["Put healthy pressure on management (VP level and above) to promote big ideas that are strategic to the company","Be involved in quarterly planning of the group, relying on business needs. Able consult multiple Team Leaders"],"Anti-Patterns":[{"anti-pattern":"Struggling to build good working relationships with the Team and Tech Leaders in the group, impacting their ability to initiate cross-team projects","remedy":"Good relationships often matter more than technical know-how. Try to cultivate, it not friendship, then at least good working relationships with the other leading devs and managers in your area"},{"anti-pattern":"Being unable to translate your vast tech knowledge to the managerial level, making it harder for management to understand your value or why you should have a seat at the table","remedy":"Clear articulation will often get you farther when communicating with non-technical management than the technical knowledge itself. You need to cultivate this ability in you, or you won\'t be able to get buy-in on the really large/important projects"}],"Resources":null}}]},"organizational-impact":{"Topics":["Collaboration","Knowledge sharing","Team play","Communication","Mentorship and Sponsoring","Processes","Continuous improvement","Recruiting","Evangelism","Well-being","Onboarding experience","Employees experience & retention"],"Ladder":[{"Dan 1":{"Responsibilities":null,"Examples":null,"Anti-Patterns":[{"anti-pattern":null,"remedy":null},{"anti-pattern":null,"remedy":null},{"anti-pattern":null,"remedy":null}],"Resources":null}},{"Dan 2":{"Responsibilities":null,"Examples":null,"Anti-Patterns":[{"anti-pattern":null,"remedy":null},{"anti-pattern":null,"remedy":null},{"anti-pattern":null,"remedy":null}],"Resources":null}},{"Dan 3":{"Responsibilities":null,"Examples":null,"Anti-Patterns":[{"anti-pattern":null,"remedy":null},{"anti-pattern":null,"remedy":null},{"anti-pattern":null,"remedy":null}],"Resources":null}},{"Dan 4":{"Responsibilities":null,"Examples":null,"Anti-Patterns":[{"anti-pattern":null,"remedy":null},{"anti-pattern":null,"remedy":null},{"anti-pattern":null,"remedy":null}],"Resources":null}},{"Dan 5":{"Responsibilities":null,"Examples":null,"Anti-Patterns":[{"anti-pattern":null,"remedy":null},{"anti-pattern":null,"remedy":null},{"anti-pattern":null,"remedy":null}],"Resources":null}}]}}}')},35:function(e,t,n){},36:function(e,t,n){},37:function(e,t,n){},54:function(e,t,n){},55:function(e,t,n){},56:function(e,t,n){"use strict";n.r(t);var i=n(1),o=n.n(i),a=n(18),s=n.n(a),r=(n(35),n(36),n(37),n(7)),l=n(0);function c(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("h1",{children:"You strive to get better, don't you?"}),Object(l.jsx)("h2",{children:'But "getting better" is so subjective. How can one even know or tell others what better is? Instead, we tried to be helpful. '}),Object(l.jsx)("h2",{children:"We\u2019ll share with you ideas, concepts, frameworks and resources that can help you level up as a Software Engineer. "}),Object(l.jsxs)("div",{className:"call-to-action",children:[Object(l.jsx)(r.b,{to:"/questionnaire",children:Object(l.jsx)("button",{children:" I\u2019m ready, show me "})}),Object(l.jsx)("label",{children:"all free, no emails, no BS. We\u2019re Engineers."})]}),Object(l.jsx)("h2",{children:" From the creators of other fun things "}),Object(l.jsxs)("div",{className:"card-group",children:[Object(l.jsx)("div",{className:"card",children:" softwareArchitectureAddict.com "}),Object(l.jsx)("div",{className:"card",children:" Forker video "}),Object(l.jsx)("div",{className:"card",children:" Chuckwho.com "})]})]})}var d=n(10),u=n(21),h=n(27),m=n(28),p=n(11),g=n(30),y=n(29),f={ENTRY:"Entry Level Engineer",NORMAL:"Software Engineer",SENIOR:"Senior Software Engineer",PRINCIPLE:"Principle Software Engineer",STAFF:"Staff Software Engineer"},b=[{question:"When it\u2019s unclear why you need to build a certain capability, what is your preference?",answers:[{content:"As long as I understand the task, it\u2019s fine for me",type:f.ENTRY},{content:"Ask my manager, this is their job",type:f.NORMAL},{content:"I feel comfortable talking with various people (product, sales, etc.) and figure out the answer",type:f.SENIOR},{content:"I\u2019m usually the one who figure this thing out for others. I cannot work without it.",type:f.PRINCIPLE}]},{question:"When you lead projects, how big are they?",answers:[{content:"I help with other projects, still didn\u2019t lead one myself",type:f.ENTRY},{content:"I\u2019m working on them myself, for a few weeks",type:f.NORMAL},{content:"Me and 2-3 more people from my team, for a few weeks to a few months",type:f.SENIOR},{content:"Me and 5-15 people from various teams, for a few weeks to a few months",type:f.PRINCIPLE},{content:"I lead some of the biggest initiatives in the company, having at least 10 people working with me for more than a year",type:f.STAFF}]},{question:"Do you know well the company\u2019s goals for the year and why these goals were chosen?",answers:[{content:"Not really. I remember some numbers but not more than that. I don\u2019t think it\u2019s needed for me to work.",type:f.ENTRY},{content:"Yes, I know the goals well. I don\u2019t know the rational for picking them",type:f.NORMAL},{content:"I can explain the goals and why they\u2019re critical for our success to other teammates\n",type:f.SENIOR},{content:"I use company\u2019s goals to attract talent, use it during interviews and help onboarding new teammates\n",type:f.PRINCIPLE}]},{question:"When others usually hear from you?",answers:[{content:"I update my manager on my progress.",type:f.ENTRY},{content:"Mostly within my team. I provide context on my work.",type:f.NORMAL},{content:"I tend to update on bigger forums around the projects I lead, or things I did to make others\u2019 life easier",type:f.SENIOR},{content:"It\u2019s very common to hear from me on various projects and initiatives on email, Slack and f2f. Many people outside of my team knows my work.",type:f.PRINCIPLE}]},{question:"When others working on a big project (>6 months effort), when are they coming to consult with you?",answers:[{content:"Very rarely. Maybe if it\u2019s around code I wrote.",type:f.ENTRY},{content:"Here and there. I do have some expertise in specific types of systems or solutions, that people want o leverage my knowledge",type:f.NORMAL},{content:"People consult with me on big projects where I have context around - from making sure requirements are solid to the solutions and tradeoffs they have in mind",type:f.SENIOR},{content:"People consult with me on everything they feel is a big challenge. Even if I don\u2019t have the context, they feel comfortable sharing and getting my perspective.",type:f.PRINCIPLE}]}],w=n(12);var v=function(e){return Object(l.jsx)("h2",{className:"question",children:e.content})};var j=function(e){return Object(l.jsxs)("div",{className:"questionCount",children:["Question ",Object(l.jsx)("span",{children:e.counter})," of ",Object(l.jsx)("span",{children:e.total})]})};var k=function(e){return Object(l.jsxs)("li",{className:"answerOption",children:[Object(l.jsx)("input",{type:"radio",className:"radioCustomButton",name:"radioGroup",checked:e.answerType===e.answer,id:e.answerType,value:e.answerType,disabled:e.answer,onChange:e.onAnswerSelected}),Object(l.jsx)("label",{className:"radioCustomLabel",htmlFor:e.answerType,children:e.answerContent})]})};n(54);var x=function(e){return Object(l.jsx)(w.CSSTransitionGroup,{className:"container",component:"div",transitionName:"fade",transitionEnterTimeout:800,transitionLeaveTimeout:500,transitionAppear:!0,transitionAppearTimeout:500,children:Object(l.jsxs)("div",{children:[Object(l.jsx)(j,{counter:e.questionId,total:e.questionTotal}),Object(l.jsx)(v,{content:e.question}),Object(l.jsx)("ul",{className:"answerOptions",children:e.answerOptions.map((function(t){return Object(l.jsx)(k,{answerContent:t.content,answerType:t.type,answer:e.answer,questionId:e.questionId,onAnswerSelected:e.onAnswerSelected},t.content)}))})]},e.questionId)})};function O(e){var t=Number(e.width)||100,n=Number(e.height)||t,i=Number(e.roundness)||1,o=e.color||"#7788aa",a='url("data:image/svg+xml;utf8,'.concat(function(e,t){return"<svg xmlns='http://www.w3.org/2000/svg'><path d='".concat(e,"' fill='").concat(t,"'></path></svg>").replace(/#/g,"%23").replace(/</g,"%3C").replace(/>/g,"%3E")}(function(e,t,n){var i=e,o=i*(t/i),a=-i/20+i/10*n;return"\n        M ".concat(i/2,",0\n        C ").concat(a,",0        0,").concat(a,"        0,").concat(o/2," \n          0,").concat(o-a,"     ").concat(a,",").concat(o,"    ").concat(i/2,",").concat(o," \n          ").concat(i-a,",").concat(o,"  ").concat(i,",").concat(o-a,"  ").concat(i,",").concat(o/2," \n          ").concat(i,",").concat(a,"     ").concat(i-a,",0      ").concat(i/2,",0\n      ").replace(/  +/g," ").replace(/\n/gi,"")}(t,n,i),o),'")');return Object(l.jsx)("div",{class:"squircle",style:{width:t+"px",height:n+"px",backgroundImage:a}})}n(55);var R=function(e){var t=e.quizResult.toLowerCase().split(" ").join("-");return Object(l.jsx)(w.CSSTransitionGroup,{className:"container result",component:"div",transitionName:"fade",transitionEnterTimeout:800,transitionLeaveTimeout:500,transitionAppear:!0,transitionAppearTimeout:500,children:Object(l.jsxs)("div",{className:"result-end",children:[Object(l.jsxs)("h2",{children:["You Are a ",Object(l.jsx)("strong",{children:e.quizResult}),"!"]}),Object(l.jsx)("h4",{children:"In other teams, it may be called X, Y, Z"}),Object(l.jsx)("h3",{children:"Curious to see what it means?"}),Object(l.jsxs)("div",{className:"squircles",children:[Object(l.jsx)(r.b,{to:"/results/engineering-craftsmanship/".concat(t),children:Object(l.jsxs)("div",{className:"squircle",children:[Object(l.jsx)(O,{width:"150",roundness:"1",color:"#ff6b6b"}),Object(l.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"48",height:"48",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",className:"feather feather-code",children:[Object(l.jsx)("polyline",{points:"16 18 22 12 16 6"}),Object(l.jsx)("polyline",{points:"8 6 2 12 8 18"})]}),Object(l.jsx)("span",{children:"Engineering Craftsmanship"})]})}),Object(l.jsx)(r.b,{to:"/results/project-leadership/".concat(t),children:Object(l.jsxs)("div",{className:"squircle",children:[Object(l.jsx)(O,{width:"150",roundness:"1",color:"#fcc419"}),Object(l.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"48",height:"48",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",className:"feather feather-users",children:[Object(l.jsx)("path",{d:"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}),Object(l.jsx)("circle",{cx:"9",cy:"7",r:"4"}),Object(l.jsx)("path",{d:"M23 21v-2a4 4 0 0 0-3-3.87"}),Object(l.jsx)("path",{d:"M16 3.13a4 4 0 0 1 0 7.75"})]}),Object(l.jsx)("span",{children:"Project Leadership"})]})}),Object(l.jsx)(r.b,{to:"/results/business-involvement/".concat(t),children:Object(l.jsxs)("div",{className:"squircle",children:[Object(l.jsx)(O,{width:"150",roundness:"1",color:"#94d82d"}),Object(l.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"48",height:"48",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",className:"feather feather-bar-chart",children:[Object(l.jsx)("line",{x1:"12",y1:"20",x2:"12",y2:"10"}),Object(l.jsx)("line",{x1:"18",y1:"20",x2:"18",y2:"4"}),Object(l.jsx)("line",{x1:"6",y1:"20",x2:"6",y2:"16"})]}),Object(l.jsx)("span",{children:"Business Involvement"})]})}),Object(l.jsx)(r.b,{to:"/results/organizational-impact/".concat(t),children:Object(l.jsxs)("div",{className:"squircle",children:[Object(l.jsx)(O,{width:"150",roundness:"1",color:"#339af0"}),Object(l.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"48",height:"48",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",className:"feather feather-briefcase",children:[Object(l.jsx)("rect",{x:"2",y:"7",width:"20",height:"14",rx:"2",ry:"2"}),Object(l.jsx)("path",{d:"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"})]}),Object(l.jsx)("span",{children:"Organizational Impact"})]})})]})]})})},N=function(e){Object(g.a)(n,e);var t=Object(y.a)(n);function n(e){var i;return Object(h.a)(this,n),(i=t.call(this,e)).state={counter:0,questionId:1,question:"",answerOptions:[],answer:"",answersCount:{},result:""},i.handleAnswerSelected=i.handleAnswerSelected.bind(Object(p.a)(i)),i}return Object(m.a)(n,[{key:"componentDidMount",value:function(){var e=this,t=b.map((function(t){return e.shuffleArray(t.answers)}));this.setState({question:b[0].question,answerOptions:t[0]})}},{key:"shuffleArray",value:function(e){for(var t,n,i=e.length;0!==i;)n=Math.floor(Math.random()*i),t=e[i-=1],e[i]=e[n],e[n]=t;return e}},{key:"handleAnswerSelected",value:function(e){var t=this;this.setUserAnswer(e.currentTarget.value),this.state.questionId<b.length?setTimeout((function(){return t.setNextQuestion()}),300):setTimeout((function(){return t.setResults(t.getResults())}),300)}},{key:"setUserAnswer",value:function(e){this.setState((function(t,n){return{answersCount:Object(u.a)(Object(u.a)({},t.answersCount),{},Object(d.a)({},e,(t.answersCount[e]||0)+1)),answer:e}}))}},{key:"setNextQuestion",value:function(){var e=this.state.counter+1,t=this.state.questionId+1;this.setState({counter:e,questionId:t,question:b[e].question,answerOptions:b[e].answers,answer:""})}},{key:"getResults",value:function(){var e=this.state.answersCount,t=Object.keys(e);if(1===Object.keys(e).length&&Object.keys(e)[0]===f.ENTRY)return f.ENTRY;return 2===t.length&&t.includes(f.ENTRY)&&t.includes(f.NORMAL)?f.NORMAL:t.every((function(e){return![f.ENTRY,f.NORMAL].includes(e)}))?f.STAFF:t.every((function(e){return![f.ENTRY,f.NORMAL,f.SENIOR].includes(e)}))?f.PRINCIPLE:f.SENIOR}},{key:"setResults",value:function(e){this.setState({result:e})}},{key:"renderQuiz",value:function(){return Object(l.jsx)(x,{answer:this.state.answer,answerOptions:this.state.answerOptions,questionId:this.state.questionId,question:this.state.question,questionTotal:b.length,onAnswerSelected:this.handleAnswerSelected})}},{key:"renderResult",value:function(){return Object(l.jsx)(R,{quizResult:this.state.result})}},{key:"render",value:function(){return Object(l.jsxs)("div",{className:"questionnaire",children:[Object(l.jsx)("div",{className:"questionnaire-group"}),this.state.result?this.renderResult():this.renderQuiz()]})}}]),n}(i.Component),C=n(14),A=n(13),q=n(2);function P(e){var t,n,i,o,a,s,r=Object(q.f)(),c=r.level,d=r.topic,u=A.Ladder[d],h=(u.Topics,u.Ladder),m=c.split("-").join(" "),p=Object.entries(A.Meta.Dans).find((function(e){var t;return(null===(t=e[1].name||"")||void 0===t?void 0:t.toLowerCase())===m.toLowerCase()}))||[],g=Object(C.a)(p,1)[0].slice(-1),y=!1;try{var f=Object.entries(h[g]),b=Object(C.a)(f,1),w=Object(C.a)(b[0],2);t=w[0],n=w[1],A.Meta.Dans[t].name.split(" ").join("-").toLowerCase(),o=n.Examples,a=n.Responsibilities,s=n.Resources,i=n["Anti-Patterns"]}catch(v){y=!0}return Object(l.jsx)(l.Fragment,{children:y?Object(l.jsx)(l.Fragment,{children:"HORRAY! YOURE A UNICORN!"}):Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{children:JSON.stringify(i)}),Object(l.jsx)("div",{children:JSON.stringify(o)}),Object(l.jsx)("div",{children:JSON.stringify(a)}),Object(l.jsx)("div",{children:JSON.stringify(s)})]})})}var E=function(){return Object(l.jsx)(l.Fragment,{children:Object(l.jsxs)("div",{className:"App",children:[Object(l.jsxs)("div",{id:"stripes",children:[Object(l.jsx)("span",{}),Object(l.jsx)("span",{}),Object(l.jsx)("span",{}),Object(l.jsx)("span",{}),Object(l.jsx)("span",{})]}),Object(l.jsx)("div",{className:"content",children:Object(l.jsx)(r.a,{exact:!0,path:"/",children:Object(l.jsx)("div",{children:Object(l.jsxs)(q.c,{children:[Object(l.jsx)(q.a,{path:"/questionnaire",children:Object(l.jsx)(N,{})}),Object(l.jsxs)(q.a,{exact:!0,path:"/",children:["HOME",Object(l.jsx)(c,{})]}),Object(l.jsx)(q.a,{path:"/results/:topic/:level",children:Object(l.jsx)(P,{})})]})})})})]})})},I=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,57)).then((function(t){var n=t.getCLS,i=t.getFID,o=t.getFCP,a=t.getLCP,s=t.getTTFB;n(e),i(e),o(e),a(e),s(e)}))};s.a.render(Object(l.jsx)(o.a.StrictMode,{children:Object(l.jsx)(E,{})}),document.getElementById("root")),I()}},[[56,1,2]]]);
//# sourceMappingURL=main.be25bc6e.chunk.js.map