{"version":3,"sources":["home/home.js","questionnaire/quizQuestions.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/squircle.js","components/Result.js","questionnaire/questionnaire.js","results/results.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","ROLES","quizQuestions","question","answers","content","type","ENTRY","NORMAL","SENIOR","PRINCIPLE","STAFF","Question","props","QuestionCount","counter","total","AnswerOption","name","checked","answerType","answer","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","questionId","questionTotal","answerOptions","map","key","Squircle","width","Number","height","roundness","color","bgImage","path","replace","svg","w","wm","r","class","style","backgroundImage","Result","parsedRole","quizResult","toLowerCase","split","join","xmlns","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","points","d","cx","cy","x1","y1","x2","y2","x","y","rx","ry","Questionnaire","state","answersCount","result","handleAnswerSelected","bind","shuffledAnswerOptions","shuffleArray","this","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","event","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","rolesChosen","Object","keys","includes","every","role","renderResult","renderQuiz","Component","Results","nextForterLevel","data","antiPatterns","Examples","Responsibilities","Resources","useParams","level","topic","resultsJson","Ladder","Topics","roleToEnglish","entries","Meta","Dans","find","item","roleNumber","slice","isLastLevel","e","JSON","stringify","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be25bc6e.chunk.js","sourcesContent":["import {\n    Link\n} from \"react-router-dom\";\n\nexport default function Home(){\n    return <>\n            <h1>You strive to get better, don't you?</h1>\n            <h2>But \"getting better\" is so subjective. How can one even know or tell others what better is? Instead, we tried to be helpful. </h2>\n            <h2>We’ll share with you ideas, concepts, frameworks and resources that can help you level up as a Software Engineer. </h2>\n\n            <div className=\"call-to-action\">\n                <Link to=\"/questionnaire\"><button> I’m ready, show me </button></Link>\n                <label>all free, no emails, no BS. We’re Engineers.</label>\n            </div>\n\n            <h2> From the creators of other fun things </h2>\n\n            <div className=\"card-group\">\n                <div className=\"card\"> softwareArchitectureAddict.com </div>\n                <div className=\"card\"> Forker video </div>\n                <div className=\"card\"> Chuckwho.com </div>\n            </div>\n        </>;\n}\n","export const ROLES = {\n    \"ENTRY\": \"Entry Level Engineer\",\n    \"NORMAL\": \"Software Engineer\",\n    \"SENIOR\": \"Senior Software Engineer\",\n    \"PRINCIPLE\": \"Principle Software Engineer\",\n    \"STAFF\": \"Staff Software Engineer\"\n}\n\nexport var quizQuestions = [\n    {\n        question: \"When it’s unclear why you need to build a certain capability, what is your preference?\",\n        answers: [\n            {\n                content: \"As long as I understand the task, it’s fine for me\",\n                type: ROLES.ENTRY\n            },\n            {\n                content: \"Ask my manager, this is their job\",\n                type: ROLES.NORMAL\n            },\n            {\n                content: \"I feel comfortable talking with various people (product, sales, etc.) and figure out the answer\",\n                type: ROLES.SENIOR\n            },\n            {\n                content: \"I’m usually the one who figure this thing out for others. I cannot work without it.\",\n                type: ROLES.PRINCIPLE\n            }\n        ]\n    },\n    {\n        question: \"When you lead projects, how big are they?\",\n        answers: [\n            {\n                content: \"I help with other projects, still didn’t lead one myself\",\n                type: ROLES.ENTRY\n            },\n            {\n                content: \"I’m working on them myself, for a few weeks\",\n                type: ROLES.NORMAL\n            },\n            {\n                content: \"Me and 2-3 more people from my team, for a few weeks to a few months\",\n                type: ROLES.SENIOR\n            },\n            {\n                content: \"Me and 5-15 people from various teams, for a few weeks to a few months\",\n                type: ROLES.PRINCIPLE\n            },\n            {\n                content: \"I lead some of the biggest initiatives in the company, having at least 10 people working with me for more than a year\",\n                type: ROLES.STAFF\n            }\n        ]\n    },\n    {\n        question: \"Do you know well the company’s goals for the year and why these goals were chosen?\",\n        answers: [\n            {\n                content: \"Not really. I remember some numbers but not more than that. I don’t think it’s needed for me to work.\",\n                type: ROLES.ENTRY\n            },\n            {\n                content: \"Yes, I know the goals well. I don’t know the rational for picking them\",\n                type: ROLES.NORMAL\n            },\n            {\n                content: \"I can explain the goals and why they’re critical for our success to other teammates\\n\",\n                type: ROLES.SENIOR\n            },\n            {\n                content: \"I use company’s goals to attract talent, use it during interviews and help onboarding new teammates\\n\",\n                type: ROLES.PRINCIPLE\n            }\n        ]\n    },\n    {\n        question: \"When others usually hear from you?\",\n        answers: [\n            {\n                content: \"I update my manager on my progress.\",\n                type: ROLES.ENTRY\n            },\n            {\n                content: \"Mostly within my team. I provide context on my work.\",\n                type: ROLES.NORMAL\n            },\n            {\n                content: \"I tend to update on bigger forums around the projects I lead, or things I did to make others’ life easier\",\n                type: ROLES.SENIOR\n            },\n            {\n                content: \"It’s very common to hear from me on various projects and initiatives on email, Slack and f2f. Many people outside of my team knows my work.\",\n                type: ROLES.PRINCIPLE\n            }\n        ]\n    },\n    {\n        question: \"When others working on a big project (>6 months effort), when are they coming to consult with you?\",\n        answers: [\n            {\n                content: \"Very rarely. Maybe if it’s around code I wrote.\",\n                type: ROLES.ENTRY\n            },\n            {\n                content: \"Here and there. I do have some expertise in specific types of systems or solutions, that people want o leverage my knowledge\",\n                type: ROLES.NORMAL\n            },\n            {\n                content: \"People consult with me on big projects where I have context around - from making sure requirements are solid to the solutions and tradeoffs they have in mind\",\n                type: ROLES.SENIOR\n            },\n            {\n                content: \"People consult with me on everything they feel is a big challenge. Even if I don’t have the context, they feel comfortable sharing and getting my perspective.\",\n                type: ROLES.PRINCIPLE\n            }\n        ]\n    }\n];\n\nexport default {quizQuestions, ROLES};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return <h2 className=\"question\">{props.content}</h2>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\n    </div>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nimport './quiz.css';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","function svg(path, color){\n    let svg = `<svg xmlns='http://www.w3.org/2000/svg'><path d='${path}' fill='${color}'></path></svg>`;\n    return svg.replace(/#/g,\"%23\").replace(/</g,\"%3C\").replace(/>/g,\"%3E\");\n}\n\nfunction path(width, height, roundness){\n    let w = width;\n    let h = height;\n    let wm = w * ( h / w );\n    let r = -( w / 20 ) + ( w / 10 * roundness );\n    let path = `\n        M ${w/2},0\n        C ${r},0        0,${r}        0,${wm/2} \n          0,${wm-r}     ${r},${wm}    ${w/2},${wm} \n          ${w-r},${wm}  ${w},${wm-r}  ${w},${wm/2} \n          ${w},${r}     ${w-r},0      ${w/2},0\n      `;\n    return path.replace( /  +/g, \" \" ).replace( /\\n/gi,\"\" );\n}\n\nexport default function Squircle(props){\n    const width = Number(props.width) || 100;\n    const height = Number(props.height) || width;\n    const roundness = Number(props.roundness) || 1;\n    const color = props.color || \"#7788aa\";\n    const bgImage = `url(\"data:image/svg+xml;utf8,${svg(path(width, height, roundness), color)}\")`;\n\n    return <div class=\"squircle\" style={{ \"width\": width + 'px', \"height\": height + 'px', backgroundImage: bgImage }}>\n</div>\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Squircle from \"./squircle\";\nimport './Result.css';\nimport {Link} from 'react-router-dom';\n\nfunction createLink(){\n\n}\n\nfunction Result(props) {\n  const parsedRole = props.quizResult.toLowerCase().split(\" \").join(\"-\");\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div className=\"result-end\">\n        <h2>You Are a <strong>{props.quizResult}</strong>!</h2>\n        <h4>In other teams, it may be called X, Y, Z</h4>\n        <h3>Curious to see what it means?</h3>\n\n        <div className=\"squircles\">\n          <Link to={`/results/engineering-craftsmanship/${parsedRole}`}>\n            <div className=\"squircle\">\n            <Squircle width=\"150\" roundness=\"1\" color=\"#ff6b6b\"></Squircle>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                 className=\"feather feather-code\">\n              <polyline points=\"16 18 22 12 16 6\"></polyline>\n              <polyline points=\"8 6 2 12 8 18\"></polyline>\n            </svg>\n            <span>Engineering Craftsmanship</span>\n            </div>\n          </Link>\n          <Link to={`/results/project-leadership/${parsedRole}`}>\n          <div className=\"squircle\">\n            <Squircle width=\"150\" roundness=\"1\" color=\"#fcc419\"></Squircle>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                 className=\"feather feather-users\">\n              <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\n              <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\n              <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\n              <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\n            </svg>\n            <span>Project Leadership</span>\n          </div>\n          </Link>\n          <Link to={`/results/business-involvement/${parsedRole}`}>\n          <div className=\"squircle\">\n            <Squircle width=\"150\" roundness=\"1\" color=\"#94d82d\"></Squircle>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                 className=\"feather feather-bar-chart\">\n              <line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"10\"></line>\n              <line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"4\"></line>\n              <line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"16\"></line>\n            </svg>\n            <span>Business Involvement</span>\n          </div>\n          </Link>\n          <Link to={`/results/organizational-impact/${parsedRole}`}>\n          <div className=\"squircle\">\n            <Squircle width=\"150\" roundness=\"1\" color=\"#339af0\"></Squircle>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                 className=\"feather feather-briefcase\">\n              <rect x=\"2\" y=\"7\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect>\n              <path d=\"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\"></path>\n            </svg>\n            <span>Organizational Impact</span>\n          </div>\n          </Link>\n\n        </div>\n\n</div>\n    </CSSTransitionGroup>\n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.string.isRequired\n};\n\nexport default Result;\n","import React, { Component } from 'react';\nimport {quizQuestions, ROLES} from './quizQuestions';\n\nimport Quiz from '../components/Quiz';\nimport Result from '../components/Result';\n\nexport class Questionnaire extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            counter: 0,\n            questionId: 1,\n            question: '',\n            answerOptions: [],\n            answer: '',\n            answersCount: {},\n            result: ''\n        };\n\n        this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n    }\n\n    componentDidMount() {\n        const shuffledAnswerOptions = quizQuestions.map(question =>\n            this.shuffleArray(question.answers)\n        );\n        this.setState({\n            question: quizQuestions[0].question,\n            answerOptions: shuffledAnswerOptions[0]\n        });\n    }\n\n    shuffleArray(array) {\n        var currentIndex = array.length,\n            temporaryValue,\n            randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    handleAnswerSelected(event) {\n        this.setUserAnswer(event.currentTarget.value);\n\n        if (this.state.questionId < quizQuestions.length) {\n            setTimeout(() => this.setNextQuestion(), 300);\n        } else {\n            setTimeout(() => this.setResults(this.getResults()), 300);\n        }\n    }\n\n    setUserAnswer(answer) {\n        this.setState((state, props) => ({\n            answersCount: {\n                ...state.answersCount,\n                [answer]: (state.answersCount[answer] || 0) + 1\n            },\n            answer: answer\n        }));\n    }\n\n    setNextQuestion() {\n        const counter = this.state.counter + 1;\n        const questionId = this.state.questionId + 1;\n\n        this.setState({\n            counter: counter,\n            questionId: questionId,\n            question: quizQuestions[counter].question,\n            answerOptions: quizQuestions[counter].answers,\n            answer: ''\n        });\n    }\n\n    getResults() {\n        const answersCount = this.state.answersCount;\n        const rolesChosen = Object.keys(answersCount)\n\n        const allEqual = Object.keys(answersCount).length === 1;\n        if (allEqual){\n            const roleChosen = Object.keys(answersCount)[0];\n            if (roleChosen === ROLES.ENTRY){\n                return ROLES.ENTRY;\n            }\n        }\n\n        if (rolesChosen.length === 2 && rolesChosen.includes(ROLES.ENTRY)  && rolesChosen.includes(ROLES.NORMAL)){\n            return ROLES.NORMAL;\n        }\n\n        const notAChild = rolesChosen.every(role => ![ROLES.ENTRY, ROLES.NORMAL].includes(role));\n        if (notAChild){\n            return ROLES.STAFF;\n        }\n\n        const superUnChild = rolesChosen.every(role => ![ROLES.ENTRY, ROLES.NORMAL, ROLES.SENIOR].includes(role));\n        if (superUnChild){\n            return ROLES.PRINCIPLE;\n        }\n\n\n        return ROLES.SENIOR;\n    }\n\n    setResults(result) {\n        this.setState({ result });\n    }\n\n    renderQuiz() {\n        return (\n            <Quiz\n                answer={this.state.answer}\n                answerOptions={this.state.answerOptions}\n                questionId={this.state.questionId}\n                question={this.state.question}\n                questionTotal={quizQuestions.length}\n                onAnswerSelected={this.handleAnswerSelected}\n            />\n        );\n    }\n\n    renderResult() {\n        return <Result quizResult={this.state.result} />;\n    }\n\n    render() {\n        return (\n            <div className=\"questionnaire\">\n                <div className=\"questionnaire-group\" />\n                {this.state.result ? this.renderResult() : this.renderQuiz()}\n            </div>\n        );\n    }\n}\n\nexport default Questionnaire;\n","import resultsJson from './career_ladder.json';\nimport {Link, useParams} from \"react-router-dom\";\n\nexport default function Results(props){\n    const { level, topic } = useParams();\n    const { Topics, Ladder } = resultsJson[\"Ladder\"][topic];\n\n    const roleToEnglish = level.split(\"-\").join(\" \");\n    const [roleToForterRoles] = Object.entries(resultsJson.Meta.Dans).find(item => {\n        return (item[1].name || '')?.toLowerCase() === roleToEnglish.toLowerCase()\n    }) || [];\n\n    const roleNumber = roleToForterRoles.slice(-1); // assuming we're 0-9\n\n    let isLastLevel = false;\n    let nextForterLevel, data, nextForterLevelToEnglish, antiPatterns, Examples, Responsibilities, Resources;\n    try{\n        [[nextForterLevel, data]] = Object.entries(Ladder[roleNumber]) ;\n        nextForterLevelToEnglish = resultsJson.Meta.Dans[nextForterLevel].name.split(\" \").join(\"-\").toLowerCase();\n        Examples = data.Examples;\n        Responsibilities = data.Responsibilities;\n        Resources = data.Resources;\n        antiPatterns = data[\"Anti-Patterns\"];\n    }\n    catch(e){\n        isLastLevel = true;\n    }\n\n\n\n\n    return <>\n        {!isLastLevel ? <>\n            <div>{JSON.stringify(antiPatterns)}</div>\n            <div>{JSON.stringify(Examples)}</div>\n            <div>{JSON.stringify(Responsibilities)}</div>\n            <div>{JSON.stringify(Resources)}</div>\n        </> : <>\n\n        HORRAY! YOURE A UNICORN!\n        </>}\n    </>\n}\n","// CSS\nimport './css-reset.css'\nimport './App.css';\n\n// PAGES\nimport Home from './home/home';\nimport Questionnaire from \"./questionnaire/questionnaire\";\nimport Results from './results/results';\n\n// PAGE RELATED STUFF\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <>\n          <div className=\"App\">\n              <div id=\"stripes\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n              </div>\n              <div className=\"content\">\n              <Router exact path=\"/\">\n                  <div>\n                      <Switch>\n                          <Route path=\"/questionnaire\">\n                              <Questionnaire />\n                          </Route>\n                          <Route exact path=\"/\">\n                              HOME\n                              <Home />\n                          </Route>\n                          <Route path=\"/results/:topic/:level\">\n                              <Results />\n                          </Route>\n                      </Switch>\n                  </div>\n              </Router>\n              </div>\n          </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}